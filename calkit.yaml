owner: petebachant
name: strava-analysis
title: Strava analysis
description: Collecting and analyzing data from Strava.
git_repo_url: https://github.com/petebachant/strava-analysis
questions:
  - Can we estimate a temperature-normalized power versus heart rate curve
    to track changes in performance?
  - What do my weekly power and heart rate distributions look like?
  - How can I increase my total energy expenditure?
  - What weekly power distribution should I strive for in order to maximize
    performance?
  - What weekly power distribution should I strive for in order to maximize
    energy expenditure, assuming maximum energy expenditure correlates with
    higher performance?
dependencies:
  - STRAVA_CLIENT_ID:
      kind: env-var
      notes: >
        The STRAVA_CLIENT_ID and STRAVA_CLIENT_SECRET environmental
        variables can be set in the .env file after creating a Strava
        application at https://www.strava.com/settings/api
  - STRAVA_CLIENT_SECRET:
      kind: env-var
  - uv
environments:
  main:
    path: pyproject.toml
    kind: uv
pipeline:
  stages:
    get-data:
      kind: python-script
      script_path: scripts/get-data.py
      environment: main
      always_run: true
      inputs:
        - pypkg/strava.py
      outputs:
        - path: data/activities
          storage: git
          delete_before_run: false
        - path: data/timeseries
          storage: dvc
          delete_before_run: false
    plot-weekly-dists:
      kind: python-script
      script_path: scripts/plot-weekly-dists.py
      environment: main
      inputs:
        - data/activities
        - data/timeseries
        - pypkg/plot.py
      outputs:
        - path: figures/dists-latest-week.json
          storage: git
        - path: figures/weekly-dists-24-weeks.json
          storage: git
    plot-weekly-energy:
      kind: python-script
      script_path: scripts/plot-weekly-energy.py
      environment: main
      inputs:
        - data/activities
      outputs:
        - path: figures/weekly-energy.json
          storage: git
datasets:
  - path: data/activities
    stage: collect-data
    title: Activities
    description: An index of all activities as raw JSON files.
  - path: data/timeseries
    stage: collect-data
    title: Time series
    description: >
      Time series data from all activities, Hive-partitioned by activity
      ID.
figures:
  - path: figures/dists-latest-week.json
    title: Power and heart rate distributions for the latest week (starting
      2025-07-28)
    stage: plot-weekly-dists
  - path: figures/weekly-dists-24-weeks.json
    title: Weekly power and heart rate distributions for the past 24 weeks
    stage: plot-weekly-dists
  - path: figures/weekly-energy.json
    title: Weekly energy expenditure
    stage: plot-weekly-energy
figure_groups:
  # Paths will be found by globbing params
  # Get individual figure from API with
  # GET /.../figure-groups/weekly_dists?week_starting=2024-01-01
  # Get figure groups and their details with
  # GET /.../figure-groups
  # This will return the object and param lists so we can iterate through them
  # Should probably also return the first figure
  weekly_dists:
    path: figures/weekly-dists/{week_starting}.json
    params:
      week_starting:
        name: Week starting
        type: date
        sort: desc
    title: Weekly power and heart rate distributions
    stage: plot-weekly-dists
references:
  - path: references.bib
notebooks:
  - path: notebooks/main.ipynb
    name: main
    title: Analysis dev template
    template: true # By default, the first cell of a template notebook is dropped?
showcase:
  - figure: figures/dists-latest-week.json
  - figure: figures/weekly-dists-24-weeks.json
  - text: >
      The top figure above shows power and heart rate distributions from
      the latest week of data. The figure below that shows these weekly
      distributions over the past 24 weeks, along with the total weekly
      energy expenditure.
